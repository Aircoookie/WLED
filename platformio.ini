; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = 
	d1_mini
	d1_mini_ota
src_dir = ./wled00
data_dir = ./wled00/data
build_cache_dir = ~/.buildcache
extra_configs = platformio_override.ini

[common]
arduino_core_2_6_3 = espressif8266@2.3.3
arduino_core_2_7_4 = espressif8266@2.6.2
arduino_core_3_0_0 = espressif8266@3.0.0
arduino_core_develop = https://github.com/platformio/platform-espressif8266#develop
arduino_core_git = https://github.com/platformio/platform-espressif8266#feature/stage
platform_wled_default = ${common.arduino_core_2_7_4}
platform_packages = 
	tasmota/framework-arduinoespressif8266 @ 3.20704.7
	platformio/toolchain-xtensa @ ~2.40802.200502
	platformio/tool-esptool @ ~1.413.0
	platformio/tool-esptoolpy @ ~1.30000.0
debug_flags = -D DEBUG=1 -D WLED_DEBUG -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
build_flags = 
	-DMQTT_MAX_PACKET_SIZE=1024
	-DSECURE_CLIENT=SECURE_CLIENT_BEARSSL
	-DBEARSSL_SSL_BASIC
	-D CORE_DEBUG_LEVEL=0
	-D NDEBUG
	-D _IR_ENABLE_DEFAULT_=false
	-D DECODE_HASH=true
	-D DECODE_NEC=true
	-D DECODE_SONY=true
	-D DECODE_SAMSUNG=true
	-D DECODE_LG=true
	-DWLED_USE_MY_CONFIG
build_unflags = 
build_flags_all_features = 
	-D WLED_ENABLE_ADALIGHT
	-D WLED_ENABLE_DMX
	-D WLED_ENABLE_MQTT
	-D WLED_ENABLE_WEBSOCKETS
build_flags_esp8266 = ${common.build_flags}  ${esp8266.build_flags}
build_flags_esp32 = ${common.build_flags}  ${esp32.build_flags}
ldscript_1m128k = eagle.flash.1m128.ld
ldscript_2m512k = eagle.flash.2m512.ld
ldscript_2m1m = eagle.flash.2m1m.ld
ldscript_4m1m = eagle.flash.4m1m.ld

[scripts_defaults]
extra_scripts = 
	pre:pio-scripts/set_version.py
	post:pio-scripts/output_bins.py
	post:pio-scripts/strip-floats.py
	pre:pio-scripts/user_config_copy.py

[env]
framework = arduino
board_build.flash_mode = dout
monitor_speed = 115200
upload_speed = 115200
lib_compat_mode = strict
lib_deps = 
	fastled/FastLED @ 3.4.0
	IRremoteESP8266 @ 2.7.18
	https://github.com/lorol/LITTLEFS.git
	https://github.com/Aircoookie/ESPAsyncWebServer.git @ ~2.0.2
extra_scripts = ${scripts_defaults.extra_scripts}

[esp8266]
build_flags = 
	-DESP8266
	-DFP_IN_IROM
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
	-DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
	-DVTABLES_IN_FLASH
	-DMIMETYPE_MINIMAL
lib_deps = 
	${env.lib_deps}
	ESPAsyncUDP
	makuna/NeoPixelBus @ 2.6.7

[env:esp01_1m_full]
board = esp01_1m
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_1m128k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_RELEASE_NAME=ESP01 -D WLED_DISABLE_OTA
lib_deps = ${esp8266.lib_deps}

[env:d1_mini]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
upload_speed = 921600
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}
monitor_filters = esp8266_exception_decoder

[env:d1_mini_debug]
board = d1_mini
build_type = debug
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} ${common.debug_flags}
lib_deps = ${esp8266.lib_deps}

[env:d1_mini_ota]
board = d1_mini
upload_protocol = espota
upload_port = "10.10.1.27"
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}

[env:travis_esp8266]
extends = env:d1_mini
build_type = debug
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} ${common.debug_flags} ${common.build_flags_all_features}

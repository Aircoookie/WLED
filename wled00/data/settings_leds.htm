<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
	<meta name="viewport" content="width=500">
	<title>LED Settings</title>
	<script>
    var d=document,laprev=55;
		function H()
		{
			window.open("https://github.com/Aircoookie/WLED/wiki/Settings#led-settings");
		}
		function B()
		{
			window.open("/settings","_self");
		}
		function S(){GetV();setABL();}
    function enABL()
    {
      var en = d.getElementById('able').checked;
      d.Sf.LA.value = (en) ? laprev:0;
      d.getElementById('abl').style.display = (en) ? 'inline':'none';
      d.getElementById('psu2').style.display = (en) ? 'inline':'none';
      if (d.Sf.LA.value > 0) setABL();
    }
    function enLA()
    {
      var val = d.Sf.LAsel.value;
      d.Sf.LA.value = val;
      d.getElementById('LAdis').style.display = (val == 50) ? 'inline':'none';
      UI();
    }
    function setABL()
    {
      d.getElementById('able').checked = true;
      d.Sf.LAsel.value = 50;
      switch (parseInt(d.Sf.LA.value)) {
        case 0: d.getElementById('able').checked = false; enABL(); break;
        case 30: d.Sf.LAsel.value = 30; break;
        case 35: d.Sf.LAsel.value = 35; break;
        case 55: d.Sf.LAsel.value = 55; break;
        case 255: d.Sf.LAsel.value = 255; break;
        default: d.getElementById('LAdis').style.display = 'inline';
      }
      UI();
    }
		function UI()
		{
			var myC = d.querySelectorAll('.wc'),
			l = myC.length;
			for (i = 0; i < l; i++) {
				myC[i].style.display = (d.getElementById('rgbw').checked) ? 'inline':'none';
			}
      
      d.getElementById('ledwarning').style.display = (d.Sf.LC.value > 1000) ? 'inline':'none';
      d.getElementById('ampwarning').style.display = (d.Sf.MA.value > 7200) ? 'inline':'none';
	  
	  if (d.Sf.LA.value == 255) laprev = 12;
	  else if (d.Sf.LA.value > 0) laprev = d.Sf.LA.value;
			
			var val = Math.ceil((100 + d.Sf.LC.value * laprev)/500)/2;
			val = (val > 5) ? Math.ceil(val) : val;
			var s = "";
      var is12V = (d.Sf.LAsel.value == 30);
      var isWS2815 = (d.Sf.LAsel.value == 255);
			if (val < 1.02 && !is12V && !isWS2815)
			{
				s = "ESP 5V pin with 1A USB supply";
			} else
			{
        		s += is12V ? "12V ": isWS2815 ? "WS2815 12V " : "5V ";
				s += val;
				s += "A supply connected to LEDs";
			}
      var val2 = Math.ceil((100 + d.Sf.LC.value * laprev)/1500)/2;
      val2 = (val2 > 5) ? Math.ceil(val2) : val2;
      var s2 = "(for most effects, ~";
      s2 += val2;
      s2 += "A is enough)<br>";
			d.getElementById('psu').innerHTML = s;
      d.getElementById('psu2').innerHTML = isWS2815 ? "" : s2;
		}
		function GetV()
		{
			//values injected by server while sending HTML
		}
	</script>
	<style>
		@import url("style.css");
	</style>
</head>
<body onload="S()">
	<form id="form_s" name="Sf" method="post">
		<div class="helpB"><button type="button" onclick="H()">?</button></div>
		<button type="button" onclick="B()">Back</button><button type="submit">Save</button><hr>
		<h2>LED setup</h2>
		LED count: <input name="LC" type="number" min="1" max="1500" oninput="UI()" required><br>
    <div id="ledwarning" style="color: orange; display: none;">
        &#9888; You might run into stability or lag issues.<br>
        Use less than 1000 LEDs per ESP for the best experience!<br>
      </div>
		<i>Recommended power supply for brightest white:</i><br>
		<b><span id="psu">?</span></b><br>
    <span id="psu2"><br></span>
    <br>
    Enable automatic brightness limiter: <input type="checkbox" name="ABen" onchange="enABL()" id="able"><br>
    <div id="abl">
      Maximum Current: <input name="MA" type="number" min="250" max="65000" oninput="UI()" required> mA<br>
      <div id="ampwarning" style="color: orange; display: none;">
        &#9888; Your power supply provides high current.<br>
        To improve the safety of your setup,<br>
        please use thick cables,<br>
        multiple power injection points and a fuse!<br>
      </div>
      <i>Automatically limits brightness to stay close to the limit.<br>
      Keep at &lt;1A if powering LEDs directly from the ESP 5V pin!<br>
      If you are using an external power supply, enter its rating.<br>
      (Current estimated usage: <span class="pow">unknown</span>)</i><br><br>
      LED voltage (Max. current for a single LED):<br>
      <select name="LAsel" onchange="enLA()">
        <option value="55" selected>5V default (55mA)</option>
        <option value="35">5V efficient (35mA)</option>
        <option value="30">12V (30mA)</option>
        <option value="255">WS2815 (12mA)</option>
        <option value="50">Custom</option>
      </select><br>
      <span id="LAdis" style="display: none;">Custom max. current per LED: <input name="LA" type="number" min="0" max="255" id="la" oninput="UI()" required> mA<br></span>
      <i>Keep at default if you are unsure about your type of LEDs.</i><br>
    </div>
    <br>
		LEDs are 4-channel type (RGBW): <input type="checkbox" name="EW" onchange=UI() id="rgbw"><br>
    <span class="wc">
    Auto-calculate white channel from RGB:<br>
    <select name=AW>
      <option value=0>None</option>
      <option value=1>Brighter</option>
      <option value=2>Accurate</option>
      <option value=3>Dual</option>
      <option value=4>Legacy</option>
    </select>
    <br></span>
		Color order:
		<select name="CO">
			<option value=0>GRB</option>
      <option value=1>RGB</option>
      <option value=2>BRG</option>
      <option value=3>RBG</option>
      <option value=4>BGR</option>
      <option value=5>GBR</option>
		</select>
		<h3>Defaults</h3>
		Turn LEDs on after power up/reset: <input type="checkbox" name="BO"><br>
    Default brightness: <input name="CA" type="number" min="0" max="255" required> (0-255)<br><br>
    Apply preset <input name="BP" type="number" min="0" max="250" required> at boot (0 uses defaults)
    <br>- <i>or</i> -<br>
    Set current preset cycle setting as boot default: <input type="checkbox" name="PC"><br><br>
		Use Gamma correction for color: <input type="checkbox" name="GC"> (strongly recommended)<br>
		Use Gamma correction for brightness: <input type="checkbox" name="GB"> (not recommended)<br><br>
		Brightness factor: <input name="BF" type="number" min="1" max="255" required> %
		<h3>Transitions</h3>
		Crossfade: <input type="checkbox" name="TF"><br>
		Transition Time: <input name="TD" maxlength="5" size="2"> ms<br>
		Enable Palette transitions: <input type="checkbox" name="PF">
		<h3>Timed light</h3>
		Default Duration: <input name="TL" type="number" min="1" max="255" required> min<br>
		Default Target brightness: <input name="TB" type="number" min="0" max="255" required><br>
		Mode:
    <select name="TW">
			<option value="0">Wait and set</option>
			<option value="1">Fade</option>
			<option value="2">Fade Color</option>
			<option value="3">Sunrise</option>
		</select>
		<h3>Advanced</h3>
		Palette blending:
		<select name="PB">
			<option value="0">Linear (wrap if moving)</option>
			<option value="1">Linear (always wrap)</option>
			<option value="2">Linear (never wrap)</option>
			<option value="3">None (not recommended)</option>
		</select><br>
		Reverse LED order (rotate 180): <input type="checkbox" name="RV"><br>
		Skip first LED: <input type="checkbox" name="SL"><hr>
		<button type="button" onclick="B()">Back</button><button type="submit">Save</button>
	</form>
</body>
</html>

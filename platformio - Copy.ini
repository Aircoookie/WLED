; PlatformIO Project Configuration File
; Please visit documentation: https://docs.platformio.org/page/projectconf.html

[platformio]
; Please uncomment one of the 5 lines below to select your board
default_envs = nodemcuv2
; default_envs = esp01
; default_envs = esp01_1m
; default_envs = esp07
; default_envs = d1_mini
; default_envs = esp32dev
; default_envs = esp8285_4CH_MagicHome
; default_envs = esp8285_4CH_H801
; default_envs = esp8285_5CH_H801

# Release binaries follow
; default_envs = nodemcuv2, esp01, esp01_1m, esp32dev, 

src_dir = ./wled00
data_dir = ./wled00/data
extra_configs =
    platformio_override.ini

[common:ESP8266]
# ------------------------------------------------------------------------------
# PLATFORM:
#   !! DO NOT confuse platformio's ESP8266 development platform with Arduino core for ESP8266
#   We use Arduino Core 2.3.0 (platformIO 1.5.0) as default
#
#   arduino core 2.3.0 = platformIO 1.5.0
#   arduino core 2.4.0 = platformIO 1.6.0 (not supported)
#   arduino core 2.4.1 = platformIO 1.7.3 (not supported)
#   arduino core 2.4.2 = platformIO 1.8.0 (not supported)
#   arduino core 2.5.0 = platformIO 2.0.4 (not supported)
#   arduino core 2.5.1 = platformIO 2.1.1 (not supported)
#   arduino core 2.5.2 = platformIO 2.2.3 (not supported)
#   arduino core 2.6.1 = platformIO 2.3.0
#   arduino core 2.6.2 = platformIO 2.3.1
#   arduino core 2.6.3 = platformIO 2.3.2
# ------------------------------------------------------------------------------
arduino_core_2_3_0 = espressif8266@1.5.0
arduino_core_2_4_0 = espressif8266@1.6.0
arduino_core_2_4_1 = espressif8266@1.7.3
arduino_core_2_4_2 = espressif8266@1.8.0
arduino_core_2_5_0 = espressif8266@2.0.4
arduino_core_2_5_1 = espressif8266@2.1.1
arduino_core_2_5_2 = espressif8266@2.2.3
arduino_core_2_6_1 = espressif8266@2.3.0
arduino_core_2_6_2 = espressif8266@2.3.1
arduino_core_2_6_3 = espressif8266@2.3.2

# Development platforms
arduino_core_develop = https://github.com/platformio/platform-espressif8266#develop
arduino_core_git = https://github.com/platformio/platform-espressif8266#feature/stage

platform = ${common.arduino_core_2_3_0}
platform_latest = ${common.arduino_core_2_6_3}

[common:ESP8266]
# ------------------------------------------------------------------------------
# FLAGS: DEBUG
#
# ------------------------------------------------------------------------------
debug_flags = -DDEBUG_ESP_CORE -DDEBUG_ESP_SSL -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
#if needed (for memleaks etc) also add; -DDEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"

# ------------------------------------------------------------------------------
# FLAGS: build flags
#   build flags for 512k/1m ESP's are different because we use Linker Scripts to adjust flash split
#    build_flags_512k ( 512 KB) =  487 KB sketch,  4 KB eeprom, 16 KB reserved
#    build_flags_1m0m (1024 KB) =  999 KB sketch,  4 KB eeprom, 16 KB reserved
#    build_flags_2m1m (2048 KB) = 1019 KB sketch, 16 KB eeprom,  992 KB spiffs, 16 KB reserved
#    build_flags_4m1m (4096 KB) = 1019 KB sketch, 16 KB eeprom,  992 KB spiffs, 16 KB reserved, 2048 KB empty/ota?
#    build_flags_4m3m (4096 KB) = 1019 KB sketch, 16 KB eeprom, 3040 KB spiffs, 16 KB reserved
#
# Available lwIP variants (macros):
#    -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH  = v1.4 Higher Bandwidth (default)
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY       = v2 Lower Memory
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH = v2 Higher Bandwidth
#
# BearSSL performance:
#  When building with -DSECURE_CLIENT=SECURE_CLIENT_BEARSSL, please add `board_build.f_cpu = 160000000` to the environment configuration
#
# BearSSL ciphers:
#   When building on core >= 2.5, you can add the build flag -DBEARSSL_SSL_BASIC in order to build BearSSL with a limited set of ciphers:
#     TLS_RSA_WITH_AES_128_CBC_SHA256 / AES128-SHA256
#     TLS_RSA_WITH_AES_256_CBC_SHA256 / AES256-SHA256
#     TLS_RSA_WITH_AES_128_CBC_SHA / AES128-SHA
#     TLS_RSA_WITH_AES_256_CBC_SHA / AES256-SHA
#  This reduces the OTA size with ~45KB, so it's especially useful on low memory boards (512k/1m).
# ------------------------------------------------------------------------------
board_512k = esp01
board_1m = esp01_1m
board_4m = esp12e

build_flags = -g -w -DMQTT_MAX_PACKET_SIZE=1024 -DNO_GLOBAL_EEPROM -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
build_flags_esp8266 = ${common.build_flags} -DESP8266
build_flags_esp32   = ${common.build_flags} -DARDUINO_ARCH_ESP32

ldscript_512k  = eagle.flash.512k0m1s.ld 
ldscript_1m0m  = eagle.flash.1m0m1s.ld
ldscript_2m1m  = eagle.flash.2m1m4s.ld
ldscript_4m1m  = eagle.flash.4m1m4s.ld
ldscript_4m3m  = eagle.flash.4m3m4s.ld

shared_libdeps_dir = ./wled00/src

# ------------------------------------------------------------------------------
# COMMON SETTINGS:
# ------------------------------------------------------------------------------
[env]
framework = arduino
board_build.flash_mode = dout
monitor_speed = 115200
upload_speed = 115200
upload_speed_fast = 921600
lib_extra_dirs =
    ${common.shared_libdeps_dir}

# ------------------------------------------------------------------------------
# LIBRARIES: required dependencies
#   Please note that we don't always use the latest version of a library.
#   The following libraries have been included (and some of them changd) in the source:
#     ArduinoJson@5.13.5, Blynk@0.5.4(changed), E131@1.0.0(changed), Time@1.5, Timezone@1.2.1
# ------------------------------------------------------------------------------
lib_compat_mode = strict
lib_deps =
    FastLED@3.3.2
    NeoPixelBus@2.5.6
    ESPAsyncTCP@1.2.0
    ESPAsyncUDP@697c75a025
    AsyncTCP@1.0.3
    Esp Async WebServer@1.2.0
    IRremoteESP8266@2.7.3
  #For use SSD1306 OLED display uncomment following
    #U8g2@~2.27.2
  #For Dallas sensor uncomment following 2 lines
    #DallasTemperature@~3.8.0
    #OneWire@~2.3.5
lib_ignore =
    AsyncTCP

# ------------------------------------------------------------------------------
# WLED BUILDS
# ------------------------------------------------------------------------------

[env:nodemcuv2]
board = nodemcuv2
board_build.ldscript = ${common.ldscript_4m1m}
build_flags = ${common.build_flags_esp8266}

[env:esp01]
board = ${common.board_512k}
board_build.ldscript = ${common.ldscript_512k}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_OTA -D WLED_DISABLE_ALEXA 
  -D WLED_DISABLE_BLYNK -D WLED_DISABLE_CRONIXIE -D WLED_DISABLE_HUESYNC -D WLED_DISABLE_INFRARED

[env:esp01_1m]
board = ${common.board_1m}
board_build.ldscript = ${common.ldscript_1m0m}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_BLYNK -D WLED_DISABLE_CRONIXIE -D WLED_DISABLE_INFRARED

[env:esp07]
board = esp07
board_build.ldscript = ${common.ldscript_4m1m}
build_flags = ${common.build_flags_esp8266} 

[env:d1_mini]
board = d1_mini
board_build.ldscript = ${common.ldscript_4m1m}
build_flags = ${common.build_flags_esp8266} 

[env:esp32dev]
board = esp32dev
platform = espressif32@1.11.2
build_flags = ${common.build_flags_esp32} 
lib_ignore =
    AsyncTCP
    AsyncUDP

[env:esp8285_4CH_MagicHome]
board = esp8285
board_build.ldscript = ${common.ldscript_1m0m}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_HUESYNC -D WLED_USE_ANALOG_LEDS

[env:esp8285_4CH_H801]
board = esp8285
board_build.ldscript = ${common.ldscript_1m0m}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_HUESYNC -D WLED_USE_ANALOG_LEDS -D WLED_USE_H801

[env:esp8285_5CH_H801]
board = esp8285
board_build.ldscript = ${common.ldscript_1m0m}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_HUESYNC -D WLED_USE_ANALOG_LEDS -D WLED_USE_H801 -D WLED_ENABLE_5CH_LEDS 

# ------------------------------------------------------------------------------
# DEVELOPMENT BOARDS
# ------------------------------------------------------------------------------

[env:d1_mini_debug]
board = d1_mini
board_build.ldscript = ${common.ldscript_4m1m}
build_flags = ${common.build_flags_esp8266} -D DEBUG -D WLED_DEBUG

# ------------------------------------------------------------------------------
# SPECIAL BUILDS - DO. NOT. USE. ever ---
# ------------------------------------------------------------------------------

[env:travis-2_3_0]
platform = ${common.arduino_core_2_3_0}
board = ${common.board_4m}
build_flags = ${common.build_flags_4m1m}

[env:travis-latest]
platform = ${common.platform_latest}
board = ${common.board_4m}
build_flags = ${common.build_flags_4m1m}

[env:travis-git]
platform = ${common.arduino_core_git}
board = ${common.board_4m}
build_flags = ${common.build_flags_4m1m}
